name: Rust

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  # Build and run tests
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            use_cross: false
            test: true
          - target: thumbv7em-none-eabihf
            use_cross: true
            test: false
            # TODO: sort out build_donna feature / tests for thumbv7em
            args: --no-default-features --features=u32_backend,getrandom/custom

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: FranzDiebold/github-env-vars-action@v1.2.1
      
    - name: Configure toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target:  ${{ matrix.target }}
        override: true

    - name: Configure caching 
      uses: actions/cache@v2
      with:
        key: ${{ matrix.target }}
        path: |
          ${{ env.HOME }}/.cargo
          target

    - name: Build library
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: build
        args: --target ${{ matrix.target }} --release ${{ matrix.args }}

    - name: Run tests
      if: ${{ matrix.test }}
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: test
        args: --target ${{ matrix.target }} ${{ matrix.args }}

    - name: Benchmark
      if: ${{ matrix.test }}
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: bench
        args: --target ${{ matrix.target }} ${{ matrix.args }}


  # Build and publish rustdocs (only on main)
  docs:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Fetch rust tooling
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Configure caching
        uses: actions/cache@v2
        with:
          key: docs
          path: |
            ${{ env.HOME }}/.cargo
            ./target

      - name: Build documentation
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: |
            --no-deps

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: target/doc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
