initSidebarItems({"fn":[["add256_modm","Scalar addition, `r = x + y`"],["check256_modm","Checks whether a scalar is valid. Returns 1 for valid, 0 for invalid."],["contract256_modm","Scalar contraction, contracts [`Bignum256Modm`] (`[u32; 9]`) to `[u8; 32]` form"],["copy256_modm","Scalar copy, `r = x`"],["eq256_modm","Check whether two scalars are equal, returns 1 for equal, 0 for non-equal."],["expand256_modm","Scalar expansion, expands `[u8; 32]` to [`Bignum256Modm`] (`[u32; 9]`)"],["expand_raw256_modm","Raw scalar expansion, expands `[u8; 32]` to [`Bignum256Modm`] (`[u32; 9]`) without reduction"],["get256_modm","Converts a scalar to u64 (if possible), returns a 1 and sets `v` on success, <=0 on failure"],["iszero256_modm","Check whether a scalar is zero, returns 1 on success, 0 on failure"],["mul256_modm","Scalar multiplication, `r = x * y`"],["muladd256_modm","Scalar multiply then add, `r = c + a * b`"],["mulsub256_modm","Scalar multiply then subtract, `r = c - a * b`"],["set256_modm","Creates a scalar `r` from u64 value `v`."],["sub256_modm","Scalar subtraction, `r = x - y`"]],"type":[["Bignum25519","Bignum25519 type for FFI, maps to `uint32_t bignum25519[10]` in `curve25519-donna-32bit.h`"],["Bignum256Modm","Bignum256Modm type for FFI, maps to `uint32_t bignum256modm[9]` in `modm-donna-32bit.h`"]]});