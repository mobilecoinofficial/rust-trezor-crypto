initSidebarItems({"fn":[["ed25519_verify","Timing safe memory compare"],["ge25519_add","Point addition, `r = a + b`"],["ge25519_check","Check if point `p1` is on a curve"],["ge25519_copy","Point copy, `r = p`"],["ge25519_double","Point doubling, `r = 2 * p`"],["ge25519_double_scalarmult_vartime","Point/Scalar multiplication, `r = [s1]p1 + [s2]base`"],["ge25519_double_scalarmult_vartime2","Point/Scalar multiplication, `r = [s1]p1 + [s2]p2`"],["ge25519_eq","Point comparison, returns 1 if points are equal, 0 otherwise"],["ge25519_fromfe_frombytes_vartime","Point from hash (`[u8; 32]`) in variable time (monero impl) INCOMPLETE"],["ge25519_mul8","Multiply by cofactor, `r = [8]P`"],["ge25519_pack","Convert point `p1` ([`Ge25519`]) to compressed form `r` (`[u8; 32]`)"],["ge25519_scalarmult","Point scalar multiplication, `r = [s1]p1`, constant time"],["ge25519_scalarmult_base_wrapper","Compute point from scalar via niels_basepoint, `r = s * B`"],["ge25519_set_neutral","TODO"],["ge25519_unpack_vartime","Unpack compressed curve form `c` (`[u8; 32]`) to `r` ([`Ge25519`])"]],"struct":[["Ge25519","Edwards point object compatible with `ge25519_t` from ed25519-donna.h:81"]]});